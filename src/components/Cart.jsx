import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';

export default function Cart() {
    const [cartItems, setCartItems] = useState([]);
    const [showConfirm, setShowConfirm] = useState(false);
    const [promoCode, setPromoCode] = useState('SERGOSHT');
    const [promoApplied, setPromoApplied] = useState(false);
    const [promoError, setPromoError] = useState('');

    useEffect(() => {
        const savedCart = localStorage.getItem('cart');
        if (savedCart) {
            setCartItems(JSON.parse(savedCart));
        }
    }, []);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É–º–º—É –∑–∞–∫–∞–∑–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã –∏ –æ—Ç–º–µ–Ω—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    useEffect(() => {
        const total = getTotalPrice();
        if (promoApplied && total < 100000) {
            setPromoApplied(false);
            setPromoError("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ ‚Äî 100000 UZS");
        } else if (!promoApplied && total >= 100000 && promoError.includes("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞")) {
            setPromoError('');
        }
    }, [cartItems, promoApplied]);

    const updateQuantity = (index, change) => {
        const updatedCart = [...cartItems];
        updatedCart[index].quantity += change;

        if (updatedCart[index].quantity <= 0) {
            updatedCart.splice(index, 1);
        }

        setCartItems(updatedCart);
        localStorage.setItem('cart', JSON.stringify(updatedCart));
    };

    const getTotalPrice = () => {
        return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);
    };

    // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ (—Å—É–º–º–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤)
    const getTotalItemsQuantity = () => {
        return cartItems.reduce((total, item) => total + item.quantity, 0);
    };

    // –õ–æ–≥–∏–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
    const getDeliveryInfo = () => {
        const total = getTotalPrice();
        
        if (total < 30000) {
            return {
                cost: 3000,
                message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–∫–∞–∂–∏—Ç–µ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É ‚Äî 30000 UZS",
                showWarning: true
            };
        } else if (total >= 30000 && total < 200000) {
            const remaining = 200000 - total;
            return {
                cost: 3000,
                message: `–ó–∞–∫–∞–∂–∏—Ç–µ –µ—â–µ –Ω–∞ ${remaining} UZS –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏`,
                showWarning: false
            };
        } else {
            return {
                cost: 0,
                message: "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞",
                showWarning: false
            };
        }
    };

    // –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞
    const applyPromoCode = () => {
        const total = getTotalPrice();
        
        if (total < 100000) {
            setPromoError("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ ‚Äî 100000 UZS");
            setPromoApplied(false);
            return;
        }

        if (promoCode.trim() === '') {
            setPromoError("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥");
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥ SERGOSHT
        if (promoCode.trim().toUpperCase() === 'SERGOSHT') {
            setPromoApplied(true);
            setPromoError('');
        } else {
            setPromoError("–ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥");
            setPromoApplied(false);
        }
    };

    // –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
    const removePromoCode = () => {
        setPromoApplied(false);
        setPromoError('');
        setPromoCode('SERGOSHT');
    };

    const getPromoDiscount = () => {
        if (promoApplied && getTotalPrice() >= 100000) {
            return Math.floor(getTotalPrice() * 0.1);
        }
        return 0;
    };

    const getFinalTotal = () => {
        const deliveryInfo = getDeliveryInfo();
        const subtotal = getTotalPrice();
        const discount = getPromoDiscount();
        return subtotal + deliveryInfo.cost - discount;
    };

    const clearCart = () => {
        localStorage.removeItem('cart');
        setCartItems([]);
        setShowConfirm(false);
    };

    const deliveryInfo = getDeliveryInfo();

    return (
        <div className="cart-container">

            {showConfirm && (
                <div className="cart-confirm-overlay">
                    <div className="cart-confirm-modal">
                        <div className="cart-confirm-icon"></div>
                        <div className="cart-confirm-title">–û—á–∏—Å—Ç–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã?</div>
                        <button className="cart-confirm-ok" onClick={clearCart}>–û–ö</button>
                        <button className="cart-confirm-cancel" onClick={() => setShowConfirm(false)}>–û—Ç–º–µ–Ω–∏—Ç—å</button>
                    </div>
                </div>
            )}

            <div className="cart-header">
                <div className="cart-header-content">
                    <div className="cart-header-title">–ö–æ—Ä–∑–∏–Ω–∞</div>
                
                    {cartItems.length > 0 && (
                        <button onClick={() => setShowConfirm(true)} className="cart-trash-btn">üóë</button>
                    )}
                    <Link to={'/'} className="cart-close-btn">‚úï</Link>
                </div>
            </div>

          
            {cartItems.length === 0 ? (
                <div className="cart-empty-fullscreen">
                    <div className="cart-empty-content">
                        <div className="cart-empty-icon">üõí</div>
                        <h2 className="cart-empty-title">–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
                        <p className="cart-empty-description">
                            –ó–∞–≥–ª—è–Ω–∏—Ç–µ –≤ –º–µ–Ω—é –∏ –Ω–∞–ø–æ–ª–Ω–∏—Ç–µ –µ—ë<br/>
                            –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –ª—é–±–∏–º—ã–º–∏ –±–ª—é–¥–∞–º–∏!
                        </p>
                        <Link to="/" className="cart-empty-button">
                            –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é
                        </Link>
                    </div>
                </div>
            ) : (
              
                <>
                    <div className="cart-tabs">
                        <div className="cart-tab ">–î–æ—Å—Ç–∞–≤–∫–∞</div>
                        <div className="cart-tab">–°–∞–º–æ–≤—ã–≤–æ–∑</div>
                    </div>

                    <div className="cart-address-section">
                        <div className="cart-address-info">
                            <span className='cart-tabi'>
                                <span className="cart-location-icon">üìç</span> —É–ª–∏—Ü–∞ –ë–∞—Ö–∞—É–¥–¥–∏–Ω–∞ –ù–∞–∫—à–±–∞–Ω–¥–∞, 158
                            </span>
                        </div>
                    </div>

                    <div className="cart-items">
                        {cartItems.map((item, index) => (
                            <div className="cart-item" key={index}>
                                <div className="cart-item-image">
                                    <img src={item.image} alt={item.title} />
                                </div>

                                <div className="cart-item-details">
                                    <div className="cart-item-name">{item.title}</div>
                                    <div className="cart-item-description">
                                        {item.variation && <div>{item.variation}</div>}
                                        {item.related_products?.map(addon => (
                                            <div key={addon.id}>
                                                +{addon.title} √ó {addon.quantity}
                                            </div>
                                        ))}
                                    </div>
                                    <div className="cart-item-price">{item.price * item.quantity} UZS</div>
                                </div>

                                <div className="cart-quantity-controls">
                                    <button 
                                        className="cart-quantity-btn" 
                                        onClick={() => updateQuantity(index, -1)}
                                    >‚àí</button>
                                    <span className="cart-quantity">{item.quantity}</span>
                                    <button 
                                        className="cart-quantity-btn" 
                                        onClick={() => updateQuantity(index, 1)}
                                    >+</button>
                                </div>
                            </div>
                        ))}
                    </div>

                    {/* –ü—Ä–æ–º–æ–∫–æ–¥ —Å–µ–∫—Ü–∏—è */}
                    <div className="cart-promo-section">
                        <div className="cart-promo-input-container">
                            <input 
                                type="text" 
                                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥"
                                value={promoCode}
                                onChange={(e) => setPromoCode(e.target.value)}
                                className="cart-promo-input"
                            />
                            <button 
                                onClick={applyPromoCode}
                                className="cart-promo-apply-btn"
                            >
                                –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                            </button>
                        </div>
                        
                        {promoError && (
                            <div className="cart-promo-error">
                                <span className="cart-warning-icon">‚ö†Ô∏è</span>
                                {promoError}
                            </div>
                        )}
                        
                        {promoApplied && (
                            <div className="cart-promo-success">
                                <span className="cart-success-icon">‚úÖ</span>
                                –ü—Ä–æ–º–æ–∫–æ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω! –°–∫–∏–¥–∫–∞ 10%
                                <button 
                                    onClick={removePromoCode}
                                    className="cart-promo-remove-btn"
                                    title="–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥"
                                >
                                    ‚úï
                                </button>
                            </div>
                        )}
                    </div>
                    
                    <div className="cart-order-summary">
                        <div className="cart-summary-row">
                            <span className="cart-summary-label">–¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ {getTotalItemsQuantity()} —à—Ç</span>
                            <span className="cart-summary-value">{getTotalPrice()} UZS</span>
                        </div>

                        {promoApplied && getPromoDiscount() > 0 && (
                            <div className="cart-summary-row">
                                <span className="cart-summary-label">–°–∫–∏–¥–∫–∞ –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É</span>
                                <span className="cart-summary-value cart-discount">-{getPromoDiscount()} UZS</span>
                            </div>
                        )}

                        <div className="cart-summary-row">
                            <span className="cart-summary-label">–î–æ—Å—Ç–∞–≤–∫–∞</span>
                            <span className="cart-summary-value">
                                {deliveryInfo.cost === 0 ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : `${deliveryInfo.cost} UZS`}
                            </span>
                        </div>

                        <div className="cart-delivery-info">
                            {deliveryInfo.message}
                        </div>

                        

                        <div className="cart-bonus-row">
                            <span className="cart-summary-label">–ë–æ–Ω—É—Å—ã –∫ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—é</span>
                            <span className="cart-bonus-value">+{Math.floor(getTotalPrice() / 100)} ‚óã</span>
                        </div>

                        <div className="cart-total-row">
                            <span>–ò—Ç–æ–≥–æ</span>
                            <span>{getFinalTotal()} UZS</span>
                        </div>
                    </div>

                    <div className="cart-bottom-padding"></div>

                    <Link to={'/Click2'}>
                        <button className="cart-checkout-btn">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ</button>
                    </Link>
                </>
            )}
        </div>
    );
}